<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http:/mybatis.org/dtd/mybatis-3-mapper.dtd">

  <!-- namespace命名空间，为了对sql语句进行隔离，方便管理 -->
  <mapper namespace="myspace">
     <!-- 
        id: 唯一标识 一个statement
        parameterType: 输入 参数的类型  通过#{}接收parameterType输入 的参数
        resultType: 输出结果 类型 不管返回是多条还是单条，指定单条记录映射的pojo类型
        #{}:表示 一个占位符，如果#{}中传入简单类型的参数，#{}中的名称随意 如果是pojo的属性就要写pojo的属性
        ${}:连接符
      -->
      <!-- 根据用户ID查询用户信息(返回单条) -->
     <select id="findUserById" parameterType="int" resultType="cn.mybatis.po.User">
         select * from user where id=#{nnd}
     </select>
     
     <!-- 根据用户名称查询用户信息(多条) 
                                不管返回是多条还是单条，指定单条记录映射的pojo类型
     -->
     <select id="findUserByName" parameterType="java.lang.String" resultType="cn.mybatis.po.User">
         select * from user where username like CONCAT('%',#{name},'%')
         <!-- 
            select * from user where username like '%${value}%'
            select * from user where username like comcat('%',#{name},'%')
          -->
     </select>
    
     <!-- 添加用户 -->
     <insert id="insertUser" parameterType="cn.mybatis.po.User">
         insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
     </insert>
     
     <!-- 更新用户 -->
     <update id="updateUser" parameterType="cn.mybatis.po.User">
         update user set username=#{username} where id=#{id}
     </update>
     
     <!-- 删除用户 -->
     <delete id="deleteUser" parameterType="int">
         delete from user where id=#{id}
     </delete>
</mapper>